package com.sathya.springmvc.product.controller;


import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.sathya.springmvc.product.entity.ProductEntity;
import com.sathya.springmvc.product.model.ProductModel;
import com.sathya.springmvc.product.service.ProductService;

import jakarta.validation.Valid;


@Controller
public class ProductController {
	@Autowired
	ProductService productService;
	/*@GetMapping("/productform")
	public String getProductForm()
	{
		return "product";
		
	}
	@PostMapping("/saveproduct")
	public String saveProduct(ProductModel productModel)
   {
		productService.saveProductDetails(productModel);
		return"success";
		
	}*/
	@GetMapping("/getallproducts")
	public String getAllProducts(Model model) {
        List<ProductEntity> products= productService.getAllProducts();
        model.addAttribute("Products",products);
        return "product-list";
    }
	@GetMapping("/getsearchform")
	public String getsearchform() {
		return"search-product";
		}
	@PostMapping("/searchbyid")
	public String Searchbyid(@RequestParam Long id,Model model) {
		ProductEntity product=productService.searchbyid(id);
		model.addAttribute("product",product);
		return"search-product";
	}
	@GetMapping("/delete/{id}")
	public String deleteProductById(@PathVariable("id") Long id) {
		productService.deleteproductById(id);
		return "redirect:/getallproducts";
		
	}
	@GetMapping("/edit/{id}")
	public String editProduct(@PathVariable("id") Long id,Model model) {
	    ProductModel product = productService.editProductById(id); 
	    model.addAttribute("product", product);
	    model.addAttribute("id",id); 
	    return "edit-product";
	} 
	@PostMapping("/editproductsave/{id}")
	public String updateProduct(@PathVariable Long id, ProductModel productModel) {
	 productService.updateProductById(id,productModel);
      return "redirect:/getallproducts";
		
	}
	
	@GetMapping("/productform")
	public String getProductForm(Model model) 
	{
		ProductModel productModel=new ProductModel();
		productModel.setMadein("India");
		productModel.setQuantity(22);
		productModel.setDiscountrate(10.5);
		model.addAttribute("productmodel", productModel);
		
		return"product";
	}
	@PostMapping("/saveproduct")
	public String saveproduct(@Valid ProductModel productModel,BindingResult bindingResult,Model model) {
		HashMap<String,String>ValidationErrors=new HashMap<String,String>();
		if(bindingResult.hasErrors()) 
		{
			for(FieldError fieldError:bindingResult.getFieldErrors()) {
			ValidationErrors.put(fieldError.getField(),fieldError.getDefaultMessage());
			}
			model.addAttribute("validationErrors",ValidationErrors);
			return"product";
		}
		productService.saveProductDetails(productModel);
		return"redirect:/getallproducts";
	}
}
	    
	

	



